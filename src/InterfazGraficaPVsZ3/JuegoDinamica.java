/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfazGraficaPVsZ3;

import Clases.*;
import Excepciones.ExceptionGame;

import java.awt.Frame;
import java.io.BufferedReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;

/**
 *
 * @author daniel
 */
public class JuegoDinamica extends javax.swing.JFrame {

    private InicioSesion is;
    private int zombies = -1;
    private int plant = -1; // 0: Sunflower - 1: Peashooter - 2: Wallnut
    private Characters[][] board_game = new Characters[5][9];
    private JLabel[][] board_label = new JLabel[5][9];
    private User usuario;
    private int sun = 50;
    private int turno;

    /**
     * Creates new form JuegoDinamica
     */
    public JuegoDinamica(InicioSesion IS) {
        // SetLayout null para poder colocar componentes sobre otros.
        this.is = IS;
        initComponents();
        JLabelBackyard.setSize(1300, 615);

        this.setSize(JLabelBackyard.getWidth(), JLabelBackyard.getHeight() + 27);
        setLocationRelativeTo(null);

        //Serializacion.cargarDatos();
        turno = 0;
        /*for (User u : Serializacion.getUsuarios().keySet()) {
            if (u.getDni().equals(is.getJTextFieldDNI().getText())) {
                usuario = u;
            }
        }*/
    }

    /**
1     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JButtonSunflower = new javax.swing.JButton();
        JButtonPeashooter = new javax.swing.JButton();
        JButtonWallnut = new javax.swing.JButton();
        JLabelSunCounter = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        JButtonEndTurn = new javax.swing.JButton();

        F0C0 = new javax.swing.JLabel();
        board_label[0][0] = F0C0;
        F0C1 = new javax.swing.JLabel();
        board_label[0][1] = F0C1;
        F0C2 = new javax.swing.JLabel();
        board_label[0][2] = F0C2;
        F0C3 = new javax.swing.JLabel();
        board_label[0][3] = F0C3;
        F0C4 = new javax.swing.JLabel();
        board_label[0][4] = F0C4;
        F0C5 = new javax.swing.JLabel();
        board_label[0][5] = F0C5;
        F0C6 = new javax.swing.JLabel();
        board_label[0][6] = F0C6;
        F0C7 = new javax.swing.JLabel();
        board_label[0][7] = F0C7;
        F0C8 = new javax.swing.JLabel();
        board_label[0][8] = F0C8;

        F1C0 = new javax.swing.JLabel();
        board_label[1][0] = F1C0;
        F1C1 = new javax.swing.JLabel();
        board_label[1][1] = F1C1;
        F1C2 = new javax.swing.JLabel();
        board_label[1][2] = F1C2;
        F1C3 = new javax.swing.JLabel();
        board_label[1][3] = F1C3;
        F1C4 = new javax.swing.JLabel();
        board_label[1][4] = F1C4;
        F1C5 = new javax.swing.JLabel();
        board_label[1][5] = F1C5;
        F1C6 = new javax.swing.JLabel();
        board_label[1][6] = F1C6;
        F1C7 = new javax.swing.JLabel();
        board_label[1][7] = F1C7;
        F1C8 = new javax.swing.JLabel();
        board_label[1][8] = F1C8;

        F2C0 = new javax.swing.JLabel();
        board_label[2][0] = F2C0;
        F2C1 = new javax.swing.JLabel();
        board_label[2][1] = F2C1;
        F2C2 = new javax.swing.JLabel();
        board_label[2][2] = F2C2;
        F2C3 = new javax.swing.JLabel();
        board_label[2][3] = F2C3;
        F2C4 = new javax.swing.JLabel();
        board_label[2][4] = F2C4;
        F2C5 = new javax.swing.JLabel();
        board_label[2][5] = F2C5;
        F2C6 = new javax.swing.JLabel();
        board_label[2][6] = F2C6;
        F2C7 = new javax.swing.JLabel();
        board_label[2][7] = F2C7;
        F2C8 = new javax.swing.JLabel();
        board_label[2][8] = F2C8;        

        F3C0 = new javax.swing.JLabel();
        board_label[3][0] = F3C0;
        F3C1 = new javax.swing.JLabel();
        board_label[3][1] = F3C1;
        F3C2 = new javax.swing.JLabel();
        board_label[3][2] = F3C2;
        F3C3 = new javax.swing.JLabel();
        board_label[3][3] = F3C3;
        F3C4 = new javax.swing.JLabel();
        board_label[3][4] = F3C4;
        F3C5 = new javax.swing.JLabel();
        board_label[3][5] = F3C5;
        F3C6 = new javax.swing.JLabel();
        board_label[3][6] = F3C6;
        F3C7 = new javax.swing.JLabel();
        board_label[3][7] = F3C7;
        F3C8 = new javax.swing.JLabel();
        board_label[3][8] = F3C8;

        F4C0 = new javax.swing.JLabel();
        board_label[4][0] = F4C0;
        F4C1 = new javax.swing.JLabel();
        board_label[4][1] = F4C1;
        F4C2 = new javax.swing.JLabel();
        board_label[4][2] = F4C2;
        F4C3 = new javax.swing.JLabel();
        board_label[4][3] = F4C3;
        F4C4 = new javax.swing.JLabel();
        board_label[4][4] = F4C4;
        F4C5 = new javax.swing.JLabel();
        board_label[4][5] = F4C5;
        F4C6 = new javax.swing.JLabel();
        board_label[4][6] = F4C6;
        F4C7 = new javax.swing.JLabel();
        board_label[4][7] = F4C7;
        F4C8 = new javax.swing.JLabel();
        board_label[4][8] = F4C8;

        JLabelBackyard = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Plants VS Zombies ");
        setMaximizedBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setResizable(false);
        getContentPane().setLayout(null);

        JButtonSunflower.setBackground(new java.awt.Color(255, 255, 255));
        JButtonSunflower.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagenesPVsZ3/sun_flower.gif"))); // NOI18N
        JButtonSunflower.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        JButtonSunflower.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JButtonSunflowerMouseClicked(evt);
            }
        });

        getContentPane().add(JButtonSunflower);
        JButtonSunflower.setBounds(10, 120, 80, 77);

        JButtonPeashooter.setBackground(new java.awt.Color(255, 255, 255));
        JButtonPeashooter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagenesPVsZ3/pea_shooter.gif"))); // NOI18N
        JButtonPeashooter.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        JButtonPeashooter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JButtonPeashooterMouseClicked(evt);
            }
        });
        getContentPane().add(JButtonPeashooter);
        JButtonPeashooter.setBounds(10, 210, 80, 80);

        JButtonWallnut.setBackground(new java.awt.Color(255, 255, 255));
        JButtonWallnut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagenesPVsZ3/walnut_full_life.gif"))); // NOI18N
        JButtonWallnut.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        JButtonWallnut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JButtonWallnutMouseClicked(evt);
            }
        });
        getContentPane().add(JButtonWallnut);
        JButtonWallnut.setBounds(10, 300, 80, 80);

        F0C0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F0C0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F0C0MouseClicked(evt);
            }
        });
        getContentPane().add(F0C0);
        F0C0.setBounds(300, 50, 70, 80);

        JLabelSunCounter.setBackground(new java.awt.Color(255, 255, 255));
        JLabelSunCounter.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        JLabelSunCounter.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JLabelSunCounter.setText("50");
        JLabelSunCounter.setOpaque(true);
        getContentPane().add(JLabelSunCounter);
        JLabelSunCounter.setBounds(20, 560, 60, 30);

        jLabel1.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("0");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(30, 70, 50, 30);

        JButtonEndTurn.setBackground(new java.awt.Color(102, 153, 0));
        JButtonEndTurn.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        JButtonEndTurn.setText("PASAR"); // NOI18N
        JButtonEndTurn.setActionCommand("PASAR ");
        JButtonEndTurn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        JButtonEndTurn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JButtonEndTurnActionPerformed(evt);
            }
        });
        getContentPane().add(JButtonEndTurn);
        JButtonEndTurn.setBounds(10, 390, 80, 80);

        F0C1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F0C1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F0C1MouseClicked(evt);
            }
        });
        getContentPane().add(F0C1);
        F0C1.setBounds(380, 50, 70, 80);

        F0C2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F0C2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F0C2MouseClicked(evt);
            }
        });
        getContentPane().add(F0C2);
        F0C2.setBounds(470, 50, 70, 80);

        F0C3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F0C3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F0C3MouseClicked(evt);
            }
        });
        getContentPane().add(F0C3);
        F0C3.setBounds(560, 50, 70, 80);

        F0C4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F0C4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F0C4MouseClicked(evt);
            }
        });
        getContentPane().add(F0C4);
        F0C4.setBounds(650, 50, 70, 80);

        F0C5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F0C5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F0C5MouseClicked(evt);
            }
        });
        getContentPane().add(F0C5);
        F0C5.setBounds(730, 50, 70, 80);

        F0C6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F0C6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F0C6MouseClicked(evt);
            }
        });
        getContentPane().add(F0C6);
        F0C6.setBounds(820, 50, 70, 80);

        F0C7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F0C7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F0C7MouseClicked(evt);
            }
        });
        getContentPane().add(F0C7);
        F0C7.setBounds(910, 50, 70, 80);

        F0C8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(F0C8);
        F0C8.setBounds(1000, 50, 70, 80);

        F1C0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F1C0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F1C0MouseClicked(evt);
            }
        });
        getContentPane().add(F1C0);
        F1C0.setBounds(300, 150, 70, 80);

        F1C1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F1C1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F1C1MouseClicked(evt);
            }
        });
        getContentPane().add(F1C1);
        F1C1.setBounds(380, 150, 70, 80);

        F1C2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F1C2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F1C2MouseClicked(evt);
            }
        });
        getContentPane().add(F1C2);
        F1C2.setBounds(470, 150, 70, 80);

        F1C3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F1C3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F1C3MouseClicked(evt);
            }
        });
        getContentPane().add(F1C3);
        F1C3.setBounds(560, 150, 70, 80);

        F1C4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F1C4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F1C4MouseClicked(evt);
            }
        });
        getContentPane().add(F1C4);
        F1C4.setBounds(650, 150, 70, 80);

        F1C5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F1C5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F1C5MouseClicked(evt);
            }
        });
        getContentPane().add(F1C5);
        F1C5.setBounds(730, 150, 70, 80);

        F1C6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F1C6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F1C6MouseClicked(evt);
            }
        });
        getContentPane().add(F1C6);
        F1C6.setBounds(820, 150, 70, 80);

        F1C7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F1C7.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            F1C7MouseClicked(evt);
            }
        });
        getContentPane().add(F1C7);
        F1C7.setBounds(910, 150, 70, 80);

        F1C8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        getContentPane().add(F1C8);
        F1C8.setBounds(1000, 150, 70, 80);

        F2C0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F2C0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F2C0MouseClicked(evt);
            }
        });
        getContentPane().add(F2C0);
        F2C0.setBounds(300, 260, 70, 80);

        F2C1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F2C1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F2C1MouseClicked(evt);
            }
        });
        getContentPane().add(F2C1);
        F2C1.setBounds(380, 260, 70, 80);

        F2C2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F2C2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F2C2MouseClicked(evt);
            }
        });
        getContentPane().add(F2C2);
        F2C2.setBounds(470, 260, 70, 80);

        F2C3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F2C3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F2C3MouseClicked(evt);
            }
        });
        getContentPane().add(F2C3);
        F2C3.setBounds(560, 260, 70, 80);

        F2C4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F2C4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F2C4MouseClicked(evt);
            }
        });
        getContentPane().add(F2C4);
        F2C4.setBounds(650, 260, 70, 80);

        F2C5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F2C5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F2C5MouseClicked(evt);
            }
        });
        getContentPane().add(F2C5);
        F2C5.setBounds(730, 260, 70, 80);

        F2C6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F2C6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F2C6MouseClicked(evt);
            }
        });
        getContentPane().add(F2C6);
        F2C6.setBounds(820, 260, 70, 80);

        F2C7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F2C7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F2C7MouseClicked(evt);
            }
        });
        getContentPane().add(F2C7);
        F2C7.setBounds(910, 260, 70, 80);

        F2C8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        getContentPane().add(F2C8);
        F2C8.setBounds(1000, 260, 70, 80);

        F3C0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F3C0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F3C0MouseClicked(evt);
            }
        });
        getContentPane().add(F3C0);
        F3C0.setBounds(300, 370, 70, 80);

        F3C1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F3C1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F3C1MouseClicked(evt);
            }
        });
        getContentPane().add(F3C1);
        F3C1.setBounds(380, 370, 70, 80);

        F3C2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F3C2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F3C2MouseClicked(evt);
            }
        });
        getContentPane().add(F3C2);
        F3C2.setBounds(470, 370, 70, 80);

        F3C3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F3C3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F3C3MouseClicked(evt);
            }
        });
        getContentPane().add(F3C3);
        F3C3.setBounds(560, 370, 70, 80);

        F3C4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F3C4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F3C4MouseClicked(evt);
            }
        });
        getContentPane().add(F3C4);
        F3C4.setBounds(650, 370, 70, 80);

        F3C5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F3C5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F3C5MouseClicked(evt);
            }
        });
        getContentPane().add(F3C5);
        F3C5.setBounds(730, 370, 70, 80);

        F3C6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F3C6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F3C6MouseClicked(evt);
            }
        });
        getContentPane().add(F3C6);
        F3C6.setBounds(820, 370, 70, 80);

        F3C7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F3C7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F3C7MouseClicked(evt);
            }
        });
        getContentPane().add(F3C7);
        F3C7.setBounds(910, 370, 70, 80);

        F3C8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        getContentPane().add(F3C8);
        F3C8.setBounds(1000, 370, 70, 80);

        F4C0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F4C0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F4C0MouseClicked(evt);
            }
        });
        getContentPane().add(F4C0);
        F4C0.setBounds(300, 470, 70, 80);

        F4C1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F4C1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F4C1MouseClicked(evt);
            }
        });
        getContentPane().add(F4C1);
        F4C1.setBounds(380, 470, 70, 80);

        F4C2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F4C2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F4C2MouseClicked(evt);
            }
        });
        getContentPane().add(F4C2);
        F4C2.setBounds(470, 470, 70, 80);

        F4C3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F4C3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F4C3MouseClicked(evt);
            }
        });
        getContentPane().add(F4C3);
        F4C3.setBounds(560, 470, 70, 80);

        F4C4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F4C4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F4C4MouseClicked(evt);
            }
        });
        getContentPane().add(F4C4);
        F4C4.setBounds(650, 470, 70, 80);

        F4C5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F4C5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F4C5MouseClicked(evt);
            }
        });
        getContentPane().add(F4C5);
        F4C5.setBounds(730, 470, 70, 80);

        F4C6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F4C6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F4C6MouseClicked(evt);
            }
        });
        getContentPane().add(F4C6);
        F4C6.setBounds(820, 470, 70, 80);

        F4C7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F4C7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F4C7MouseClicked(evt);
            }
        });
        getContentPane().add(F4C7);
        F4C7.setBounds(910, 470, 70, 80);

        F4C8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        getContentPane().add(F4C8);
        F4C8.setBounds(1000, 470, 70, 80);

        JLabelBackyard.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagenesPVsZ3/backyard.jpg"))); // NOI18N
        JLabelBackyard.setOpaque(true);
        getContentPane().add(JLabelBackyard);
        JLabelBackyard.setBounds(0, 0, 1120, 600);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JButtonSunflowerMouseClicked(java.awt.event.MouseEvent evt) {
        this.plant = 0;
    }

    private void JButtonPeashooterMouseClicked(java.awt.event.MouseEvent evt) {
        this.plant = 1;
    }

    private void JButtonWallnutMouseClicked(java.awt.event.MouseEvent evt) {
        this.plant = 2;
    }

    public void definirDificultad() {
            try {
                switch (this.is.getDificultad()) {
                    case "BAJA":
                        zombies = 5;
                        break;
                    case "MEDIA":
                        zombies = 15;
                        break;
                    case "ALTA":
                        zombies = 25;
                        break;
                    case "IMPOSIBLE":
                        zombies = 50;
                        break;
                    default:
                        throw new ExceptionGame("Dificultad errónea. Vuelve a introducirla.");
                }
            } catch (ExceptionGame ej) {
                System.out.println(ej.getMessage());
            }
    }

    private void JButtonEndTurnActionPerformed(java.awt.event.ActionEvent evt) {
        endTurn();
    }

    public void introduceZombies() {
        if (zombies < 0) definirDificultad();
        switch (this.is.getDificultad()) {
            case "BAJA":
                if (turno > 10 && zombies != 0) {
                    selectPositionToIntroduceZombie(); 
                }
                break;
            case "MEDIA":
                if (turno > 7 && zombies != 0) {
                    selectPositionToIntroduceZombie(); 
                }
                break;
            case "ALTA":
                if (turno > 5 && zombies != 0) {
                    selectPositionToIntroduceZombie();  
                }
                break;
            case "IMPOSIBLE":
                if (turno > 5 && zombies != 0) {
                    selectPositionToIntroduceZombie();
                }
                break;

        }
    }

    public void selectPositionToIntroduceZombie (){
        ImageIcon image_zombie = new ImageIcon(getClass().getResource("/ImagenesPVsZ3/zombie_normal.gif"));
        Random rd = new Random();
        int f = rd.nextInt(5);

        board_label[f][8].setIcon(image_zombie);
        
        board_game[f][8] = new Zombie();

        zombies -= 1;

    }

    public boolean suficientesSoles() { 
        boolean user_have_enough_sun = false;
        if (sunEnoughForPlant()) user_have_enough_sun = true;
        return user_have_enough_sun;
    }

    public boolean sunEnoughForPlant() {
        Sunflower s = new Sunflower();
        Peashooter p = new Peashooter();
        WallNut w = new WallNut();

        if (this.plant==0 && sun >= s.getCost()){
            sun = sun - s.getCost();
            JLabelSunCounter.setText(Integer.toString(sun));
            return true;
        } else if (this.plant==1 && sun >= p.getCost()){
            sun = sun - p.getCost();
            JLabelSunCounter.setText(Integer.toString(sun));
            return true;
        } else if (this.plant==2 && sun >= w.getCost()){
            sun = sun - w.getCost();
            JLabelSunCounter.setText(Integer.toString(sun));
            return true; 
        } else {
            JOptionPane.showMessageDialog(new Frame(), "Not enough sun");
            return false;
        }  
    }

    public void endTurn() {
        addCharactersCycles();
        doActions();
        introduceZombies();
        turno++;
        if (zombies == 0 && noZombiesAlive()){
            JOptionPane.showMessageDialog(new Frame(), "YOU WIN");
            this.setVisible(false);
        }
    }

    public void addCharactersCycles() {

        for(int i = 0; i < board_game.length; i++) {
            for(int j = 0; j < board_game[i].length; j++) {
                if (board_game[i][j] != null) board_game[i][j].setCycle(board_game[i][j].getCycle() + 1);
            }
        }
    }

    public void doActions() {
        atackAndMovements();
        sumarSoles();
    }

    public void atackAndMovements(){
        ImageIcon image_zombie = new ImageIcon(getClass().getResource("/ImagenesPVsZ3/zombie_normal.gif"));

        for(int i = 0; i < board_game.length; i++) {
            int shoots = 0; 
            for(int j = 0; j < board_game[i].length; j++) { 
                if (board_game[i][j] != null){
                    if (board_game[i][j].getName().equals("Peashooter")) {
                        shoots += 1;
                    }
                    if (board_game[i][j].getName().equals("Zombie")){
                        boolean zombie_alive = true;
                        while (shoots>0 ){
                            if (board_game[i][j].getLife()>0) {
                                board_game[i][j].setLife(board_game[i][j].getLife()-1);
                                shoots -= 1;
                            }
                            if (board_game[i][j].getLife()==0){
                                zombie_alive=false;
                                board_game[i][j] = null;
                                board_label[i][j].setIcon(null);
                                break;
                            }        
                        }
                        if (zombie_alive){
                            if (board_game[i][j].getCycle() % 2 == 0) {
                                if (j==0){
                                    JOptionPane.showMessageDialog(new Frame(), "GAME OVER");
                                    this.setVisible(true);
                                }else if (board_game[i][j-1] == null){
                                        board_game[i][j-1] = board_game[i][j];
                                        board_label[i][j-1].setIcon(image_zombie);
                                        board_game[i][j] = null;
                                        board_label[i][j].setIcon(null);
                                    } else if (!board_game[i][j-1].getName().equals("Zombie")){
                                        board_game[i][j-1].setLife(board_game[i][j-1].getLife()-1);
                                        if (board_game[i][j-1].getLife()==0){
                                            board_game[i][j-1] = null;
                                            board_label[i][j-1].setIcon(null);
                                        }
                                    }
                            }
                        }
                    }
                }
            }
        }
    }

    public void sumarSoles() {
        for(int i = 0; i < board_game.length; i++) {
            for(int j = 0; j < board_game[i].length; j++) {
                if (board_game[i][j] != null){
                    if (board_game[i][j].getName().equals("Sunflower")) {
                       if (board_game[i][j].getCycle() % 2 == 0) {
                        sun = sun + 10;
                        JLabelSunCounter.setText(Integer.toString(sun));
                       }
                    }
                }
            }
        }
    }
    
    public boolean noZombiesAlive(){
        for(int i = 0; i < board_game.length; i++) { 
            for(int j = 0; j < board_game[i].length; j++) { 
                if (board_game[i][j] != null){
                if (board_game[i][j].getName().equals("Zombie")) return false;
                }
            }
        }
        return true;
    }

    public ImageIcon drawPlant() {
        ImageIcon image;
        switch (this.plant) {
            case 0:
                image = new ImageIcon(getClass().getResource("/ImagenesPVsZ3/sun_flower.gif"));
                break;
            case 1:
                image = new ImageIcon(getClass().getResource("/ImagenesPVsZ3/pea_shooter.gif"));
                break;
            case 2:
                image = new ImageIcon(getClass().getResource("/ImagenesPVsZ3/walnut_full_life.gif"));
                break;
            default:
                image = null;
        }
        return image;
    }

    public void insertPlant(int i, int j) {
        switch (this.plant) {
            case 0:
                board_game[i][j] = new Sunflower();
                break;
            case 1:
                board_game[i][j] = new Peashooter();
                break;
            case 2:
                board_game[i][j] = new WallNut();
                break;
            default:
                break;
        }
    }
    
    private void F0C0MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[0][0] == null){
            if (this.suficientesSoles()) {
                F0C0.setIcon(drawPlant());
                insertPlant(0, 0); 
            }
        }
    }

    private void F0C1MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[0][1] == null){
            if (this.suficientesSoles()) {
                F0C1.setIcon(drawPlant());
                insertPlant(0, 1); 
            }
        }
    }

    private void F0C2MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[0][2] == null){
            if (this.suficientesSoles()) {
                F0C2.setIcon(drawPlant());
                insertPlant(0, 2); 
            }
        }
    }


    private void F0C3MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[0][3] == null){
            if (this.suficientesSoles()) {
                F0C3.setIcon(drawPlant());
                insertPlant(0, 3); 
            }
        }
    }

    private void F0C4MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[0][4] == null){
            if (this.suficientesSoles()) {
                F0C4.setIcon(drawPlant());
                insertPlant(0, 4); 
            }
        }
    }

    private void F0C5MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[0][5] == null){
            if (this.suficientesSoles()) {
                F0C5.setIcon(drawPlant());
                insertPlant(0, 5); 
            }
        }
    }

    private void F0C6MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[0][6] == null){
            if (this.suficientesSoles()) {
                F0C6.setIcon(drawPlant());
                insertPlant(0, 6); 
            }
        }
    }

    private void F0C7MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[0][7] == null){
            if (this.suficientesSoles()) {
                F0C7.setIcon(drawPlant());
                insertPlant(0, 7);
            }
        }
    }


    private void F1C0MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[1][0] == null){
            if (this.suficientesSoles()) {
                F1C0.setIcon(drawPlant());
                insertPlant(1, 0); 
            }
        }
    }

    private void F1C1MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[1][1] == null){
            if (this.suficientesSoles()) {
                F1C1.setIcon(drawPlant());
                insertPlant(1, 1); 
            }
        }
    }

    private void F1C2MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[1][2] == null){
            if (this.suficientesSoles()) {
                F1C2.setIcon(drawPlant());
                insertPlant(1, 2); 
            }
        }
    }

    private void F1C3MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[1][3] == null){
            if (this.suficientesSoles()) {
                F1C3.setIcon(drawPlant());
                insertPlant(1, 3); 
            }
        }
    }

    private void F1C4MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[1][4] == null){
            if (this.suficientesSoles()) {
                F1C4.setIcon(drawPlant());
                insertPlant(1, 4); 
            }
        }
    }

    private void F1C5MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[1][5] == null){
            if (this.suficientesSoles()) {
                F1C5.setIcon(drawPlant());
                insertPlant(1, 5); 
            }
        }
    }

    private void F1C6MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[1][6] == null){
            if (this.suficientesSoles()) {
                F1C6.setIcon(drawPlant());
                insertPlant(1, 6); 
            }
        }
    }

    private void F1C7MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[1][7] == null){
            if (this.suficientesSoles()) {
                F1C7.setIcon(drawPlant());
                insertPlant(1, 7); 
            }
        }
    }

    private void F2C0MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[2][0] == null){
            if (this.suficientesSoles()) {
                F2C0.setIcon(drawPlant());
                insertPlant(2, 0); 
            }
        }
    }

    private void F2C1MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[2][1] == null){
            if (this.suficientesSoles()) {
                F2C1.setIcon(drawPlant());
                insertPlant(2, 1); 
            }
        }
    }

    private void F2C2MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[2][2] == null){
            if (this.suficientesSoles()) {
                F2C2.setIcon(drawPlant());
                insertPlant(2, 2); 
            }
        }
    }

    private void F2C3MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[2][3] == null){
            if (this.suficientesSoles()) {
                F2C3.setIcon(drawPlant());
                insertPlant(2, 3); 
            }
        }
    }

    private void F2C4MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[2][4] == null){
            if (this.suficientesSoles()) {
                F2C4.setIcon(drawPlant());
                insertPlant(2, 4); 
            }
        }
    }

    private void F2C5MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[2][5] == null){
            if (this.suficientesSoles()) {
                F2C5.setIcon(drawPlant());
                insertPlant(2, 5); 
            }
        }
    }

    private void F2C6MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[2][6] == null){
            if (this.suficientesSoles()) {
                F2C6.setIcon(drawPlant());
                insertPlant(2, 6); 
            }
        }
    }

    private void F2C7MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[2][7] == null){
            if (this.suficientesSoles()) {
                F2C7.setIcon(drawPlant());
                insertPlant(2, 7); 
            }
        }
    }

    private void F3C0MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[3][0] == null){
            if (this.suficientesSoles()) {
                F3C0.setIcon(drawPlant());
                insertPlant(3, 0); 
            }
        }
    }

    private void F3C1MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[3][1] == null){
            if (this.suficientesSoles()) {
                F3C1.setIcon(drawPlant());
                insertPlant(3, 1); 
            }
        }
    }

    private void F3C2MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[3][2] == null){
            if (this.suficientesSoles()) {
                F3C2.setIcon(drawPlant());
                insertPlant(3, 2); 
            }
        }
    }

    private void F3C3MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[3][3] == null){
            if (this.suficientesSoles()) {
                F3C3.setIcon(drawPlant());
                insertPlant(3, 3); 
            }
        }
    }

    private void F3C4MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[3][4] == null){
            if (this.suficientesSoles()) {
                F3C4.setIcon(drawPlant());
                insertPlant(3, 4); 
            }
        }
    }

    private void F3C5MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[3][5] == null){
            if (this.suficientesSoles()) {
                F3C5.setIcon(drawPlant());
                insertPlant(3, 5); 
            }
        }
    }

    private void F3C6MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[3][6] == null){
            if (this.suficientesSoles()) {
                F3C6.setIcon(drawPlant());
                insertPlant(3, 6); 
            }
        }
    }

    private void F3C7MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[3][7] == null){
            if (this.suficientesSoles()) {
                F3C7.setIcon(drawPlant());
                insertPlant(3, 7); 
            }
        }
    }

    private void F4C0MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[4][0] == null){
            if (this.suficientesSoles()) {
                F4C0.setIcon(drawPlant());
                insertPlant(4, 0); 
            }
        }
    }

    private void F4C1MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[4][1] == null){
            if (this.suficientesSoles()) {
                F4C1.setIcon(drawPlant());
                insertPlant(4, 1); 
            }
        }
    }

    private void F4C2MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[4][2] == null){
            if (this.suficientesSoles()) {
                F4C2.setIcon(drawPlant());
                insertPlant(4, 2); 
            }
        }
    }

    private void F4C3MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[4][3] == null){
            if (this.suficientesSoles()) {
                F4C3.setIcon(drawPlant());
                insertPlant(4, 3); 
            }
        }
    }

    private void F4C4MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[4][4] == null){
            if (this.suficientesSoles()) {
                F4C4.setIcon(drawPlant());
                insertPlant(4, 4); 
            }
        }
    }

    private void F4C5MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[4][5] == null){
            if (this.suficientesSoles()) {
                F4C5.setIcon(drawPlant());
                insertPlant(4, 5); 
            }
        }
    }

    private void F4C6MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[4][6] == null){
            if (this.suficientesSoles()) {
                F4C6.setIcon(drawPlant());
                insertPlant(4, 6); 
            }
        }
    }

    private void F4C7MouseClicked(java.awt.event.MouseEvent evt) {
        if (board_game[4][7] == null){
            if (this.suficientesSoles()) {
                F4C7.setIcon(drawPlant());
                insertPlant(4, 7); 
            }
        }
    }

    private javax.swing.JLabel F0C0;
    private javax.swing.JLabel F0C1;
    private javax.swing.JLabel F0C2;
    private javax.swing.JLabel F0C3;
    private javax.swing.JLabel F0C4;
    private javax.swing.JLabel F0C5;
    private javax.swing.JLabel F0C6;
    private javax.swing.JLabel F0C7;
    private javax.swing.JLabel F0C8;
    private javax.swing.JLabel F1C0;
    private javax.swing.JLabel F1C1;
    private javax.swing.JLabel F1C2;
    private javax.swing.JLabel F1C3;
    private javax.swing.JLabel F1C4;
    private javax.swing.JLabel F1C5;
    private javax.swing.JLabel F1C6;
    private javax.swing.JLabel F1C7;
    private javax.swing.JLabel F1C8;
    private javax.swing.JLabel F2C0;
    private javax.swing.JLabel F2C1;
    private javax.swing.JLabel F2C2;
    private javax.swing.JLabel F2C3;
    private javax.swing.JLabel F2C4;
    private javax.swing.JLabel F2C5;
    private javax.swing.JLabel F2C6;
    private javax.swing.JLabel F2C7;
    private javax.swing.JLabel F2C8;
    private javax.swing.JLabel F3C0;
    private javax.swing.JLabel F3C1;
    private javax.swing.JLabel F3C2;
    private javax.swing.JLabel F3C3;
    private javax.swing.JLabel F3C4;
    private javax.swing.JLabel F3C5;
    private javax.swing.JLabel F3C6;
    private javax.swing.JLabel F3C7;
    private javax.swing.JLabel F3C8;
    private javax.swing.JLabel F4C0;
    private javax.swing.JLabel F4C1;
    private javax.swing.JLabel F4C2;
    private javax.swing.JLabel F4C3;
    private javax.swing.JLabel F4C4;
    private javax.swing.JLabel F4C5;
    private javax.swing.JLabel F4C6;
    private javax.swing.JLabel F4C7;
    private javax.swing.JLabel F4C8;
    private javax.swing.JButton JButtonSunflower;
    private javax.swing.JButton JButtonPeashooter;
    private javax.swing.JButton JButtonWallnut;
    private javax.swing.JButton JButtonEndTurn;
    private javax.swing.JLabel JLabelBackyard;
    private javax.swing.JLabel JLabelSunCounter;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration                   
}
